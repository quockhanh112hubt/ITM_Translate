"""
H·ªá th·ªëng ƒëa ng√¥n ng·ªØ (i18n) cho ITM Translate
"""
import json
import os

# File l∆∞u tr·ªØ ng√¥n ng·ªØ ƒë√£ ch·ªçn
LANGUAGE_CONFIG_FILE = "language.json"

# Dictionary ch·ª©a t·∫•t c·∫£ text c·∫ßn d·ªãch
TRANSLATIONS = {
    "vi": {
        # Window title
        "app_title": "ITM Translate v1.2.3",
        
        # Tab names
        "tab_settings": "C√†i ƒë·∫∑t",
        "tab_api_keys": "Qu·∫£n l√Ω API KEY",
        "tab_advanced": "N√¢ng Cao",
        
        # Settings tab
        "settings_title": "C√†i ƒë·∫∑t ph√≠m t·∫Øt & ng√¥n ng·ªØ",
        "auto_choose_hint": "T√πy ch·ªçn m·∫∑c ƒë·ªãnh. Ng√¥n ng·ªØ ƒë·∫ßu ti√™n s·∫Ω ƒë∆∞·ª£c d·ªãch t·ªõi ng√¥n ng·ªØ th·ª© 2. Ng√¥n ng·ªØ th·ª© 2 s·∫Ω ƒë∆∞·ª£c d·ªãch t·ªõi ng√¥n ng·ªØ th·ª© 3",
        "shortcuts_group1": "Ph√≠m t·∫Øt",
        "modifier1": "Modifier 1",
        "modifier2": "Modifier 2",
        "main_key": "Ph√≠m ch√≠nh",
        "popup_translate": "D·ªãch popup",
        "replace_translate": "D·ªãch & thay th·∫ø",
        "first_language": "Ng√¥n ng·ªØ ƒë·∫ßu ti√™n:",
        "second_language": "Ng√¥n ng·ªØ th·ª© 2:",
        "third_language": "Ng√¥n ng·ªØ th·ª© 3:",
        "shortcuts_group2": "Ph√≠m t·∫Øt nh√≥m 2:",
        "group2_first_language": "Ng√¥n ng·ªØ ƒë·∫ßu ti√™n:",
        "group2_second_language": "Ng√¥n ng·ªØ th·ª© 2:",
        "group2_third_language": "Ng√¥n ng·ªØ th·ª© 3:",
        "auto_save_option": "Hi·ªán t√πy ch·ªçn t·ª± ch·ªânh",
        "save_close_settings": "L∆∞u & Kh√©p C·ª≠a S·ªï C√†i ƒê·∫∑t",
        "cancel": "H·ªßy b·ªè",
        
        # API Keys tab
        "api_keys_title": "Qu·∫£n l√Ω API Keys",
        "add_key": "Th√™m API Key",
        "edit_key": "Ch·ªânh s·ª≠a",
        "delete_key": "X√≥a",
        "set_active": "ƒê·∫∑t l√†m ch√≠nh",
        "key_name": "T√™n",
        "provider": "Nh√† cung c·∫•p",
        "key_preview": "Key Preview",
        "model": "Model",
        "status": "Tr·∫°ng th√°i",
        "active": "ƒêang d√πng",
        "inactive": "Kh√¥ng d√πng",
        
        # Add/Edit API Key dialog
        "add_api_key": "Th√™m API Key m·ªõi",
        "edit_api_key": "Ch·ªânh s·ª≠a API Key",
        "key_name_label": "T√™n Key:",
        "key_name_placeholder": "V√≠ d·ª•: OpenAI ch√≠nh, Claude backup...",
        "provider_label": "Nh√† cung c·∫•p:",
        "api_key_label": "API Key:",
        "api_key_placeholder": "Nh·∫≠p API key c·ªßa b·∫°n...",
        "model_label": "Model:",
        "auto_model": "T·ª± ƒë·ªông",
        "test_key": "Ki·ªÉm tra",
        "save": "L∆∞u",
        "cancel": "H·ªßy",
        
        # Advanced tab
        "advanced_title": "C√°c t√πy ch·ªçn n√¢ng cao",
        "startup_group": "Kh·ªüi ƒë·ªông",
        "startup_with_windows": "Kh·ªüi ƒë·ªông c√πng Windows",
        "show_window_startup": "Hi·ªÉn th·ªã c·ª≠a s·ªï khi kh·ªüi ƒë·ªông",
        "features_group": "T√≠nh nƒÉng",
        "floating_translate_button": "N√∫t d·ªãch n·ªïi (xu·∫•t hi·ªán khi ch·ªçn text)",
        "about_group": "Th√¥ng tin",
        "usage_guide": "H∆∞·ªõng d·∫´n s·ª≠ d·ª•ng",
        "app_info": "Th√¥ng tin ch∆∞∆°ng tr√¨nh",
        "check_updates": "Ki·ªÉm tra c·∫≠p nh·∫≠t",
        
        # Messages and dialogs
        "restart_required": "C·∫ßn kh·ªüi ƒë·ªông l·∫°i",
        "restart_message": "M·ªôt s·ªë thay ƒë·ªïi c·∫ßn kh·ªüi ƒë·ªông l·∫°i ·ª©ng d·ª•ng ƒë·ªÉ c√≥ hi·ªáu l·ª±c. B·∫°n c√≥ mu·ªën kh·ªüi ƒë·ªông l·∫°i ngay kh√¥ng?",
        "restart_now": "Kh·ªüi ƒë·ªông l·∫°i",
        "restart_later": "ƒê·ªÉ sau",
        "validation_error": "L·ªói x√°c th·ª±c",
        "key_name_required": "Vui l√≤ng nh·∫≠p t√™n cho API key",
        "provider_required": "Vui l√≤ng ch·ªçn nh√† cung c·∫•p",
        "api_key_required": "Vui l√≤ng nh·∫≠p API key",
        "delete_confirm": "X√°c nh·∫≠n x√≥a",
        "delete_key_message": "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a API key n√†y?",
        "yes": "C√≥",
        "no": "Kh√¥ng",
        "testing_key": "ƒêang ki·ªÉm tra...",
        "test_success": "Ki·ªÉm tra th√†nh c√¥ng!",
        "test_failed": "Ki·ªÉm tra th·∫•t b·∫°i: ",
        "duplicate_name": "T√™n API key ƒë√£ t·ªìn t·∫°i",
        "invalid_hotkey": "Ph√≠m t·∫Øt kh√¥ng h·ª£p l·ªá",
        "hotkey_exists": "Ph√≠m t·∫Øt ƒë√£ ƒë∆∞·ª£c s·ª≠ d·ª•ng",
        
        # Popup and floating button
        "translate_button": "üåê D·ªãch",
        "loading": "ƒêang d·ªãch...",
        "translation_failed": "D·ªãch th·∫•t b·∫°i",
        "no_text_selected": "Kh√¥ng c√≥ text ƒë∆∞·ª£c ch·ªçn",
        "replace_failed": "Kh√¥ng th·ªÉ thay th·∫ø vƒÉn b·∫£n t·ª± ƒë·ªông. V·ªã tr√≠ d√°n kh√¥ng cho ph√©p.",
        
        # Language names
        "any_language": "Any Language",
        "vietnamese": "Ti·∫øng Vi·ªát", 
        "english": "English",
        "japanese": "Êó•Êú¨Ë™û",
        "korean": "ÌïúÍµ≠Ïñ¥",
        "chinese_simplified": "‰∏≠Êñá(ÁÆÄ‰Ωì)",
        "chinese_traditional": "‰∏≠Êñá(ÁπÅÈ´î)",
        "french": "Fran√ßais",
        "german": "Deutsch",
        "spanish": "Espa√±ol",
        "italian": "Italiano",
        "portuguese": "Portugu√™s",
        "russian": "–†—É—Å—Å–∫–∏–π",
        "arabic": "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©",
        "thai": "‡πÑ‡∏ó‡∏¢",
        "indonesian": "Bahasa Indonesia",
    },
    
    "en": {
        # Window title
        "app_title": "ITM Translate v1.2.3",
        
        # Tab names
        "tab_settings": "Settings",
        "tab_api_keys": "API KEY Management",
        "tab_advanced": "Advanced",
        
        # Settings tab
        "settings_title": "Hotkey & Language Settings",
        "auto_choose_hint": "Default option. First language will be translated to second language. Second language will be translated to third language",
        "shortcuts_group1": "Shortcuts",
        "modifier1": "Modifier 1",
        "modifier2": "Modifier 2", 
        "main_key": "Main Key",
        "popup_translate": "Popup translate",
        "replace_translate": "Translate & replace",
        "first_language": "First language:",
        "second_language": "Second language:",
        "third_language": "Third language:",
        "shortcuts_group2": "Group 2 shortcuts:",
        "group2_first_language": "First language:",
        "group2_second_language": "Second language:",
        "group2_third_language": "Third language:",
        "auto_save_option": "Show auto-save option",
        "save_close_settings": "Save & Close Settings",
        "cancel": "Cancel",
        
        # API Keys tab
        "api_keys_title": "API Keys Management",
        "add_key": "Add API Key",
        "edit_key": "Edit",
        "delete_key": "Delete",
        "set_active": "Set Active",
        "key_name": "Name",
        "provider": "Provider",
        "key_preview": "Key Preview",
        "model": "Model",
        "status": "Status",
        "active": "Active",
        "inactive": "Inactive",
        
        # Add/Edit API Key dialog
        "add_api_key": "Add New API Key",
        "edit_api_key": "Edit API Key",
        "key_name_label": "Key Name:",
        "key_name_placeholder": "e.g., OpenAI main, Claude backup...",
        "provider_label": "Provider:",
        "api_key_label": "API Key:",
        "api_key_placeholder": "Enter your API key...",
        "model_label": "Model:",
        "auto_model": "Auto",
        "test_key": "Test",
        "save": "Save",
        "cancel": "Cancel",
        
        # Advanced tab
        "advanced_title": "Advanced Options",
        "startup_group": "Startup",
        "startup_with_windows": "Start with Windows",
        "show_window_startup": "Show window on startup",
        "features_group": "Features",
        "floating_translate_button": "Floating translate button (appears when selecting text)",
        "about_group": "About",
        "usage_guide": "Usage Guide",
        "app_info": "App Information",
        "check_updates": "Check for Updates",
        
        # Messages and dialogs
        "restart_required": "Restart Required",
        "restart_message": "Some changes require restarting the application to take effect. Would you like to restart now?",
        "restart_now": "Restart Now",
        "restart_later": "Later",
        "validation_error": "Validation Error",
        "key_name_required": "Please enter a name for the API key",
        "provider_required": "Please select a provider",
        "api_key_required": "Please enter an API key",
        "delete_confirm": "Confirm Delete",
        "delete_key_message": "Are you sure you want to delete this API key?",
        "yes": "Yes",
        "no": "No",
        "testing_key": "Testing...",
        "test_success": "Test successful!",
        "test_failed": "Test failed: ",
        "duplicate_name": "API key name already exists",
        "invalid_hotkey": "Invalid hotkey",
        "hotkey_exists": "Hotkey already in use",
        
        # Popup and floating button
        "translate_button": "üåê Translate",
        "loading": "Translating...",
        "translation_failed": "Translation failed",
        "no_text_selected": "No text selected",
        "replace_failed": "Cannot automatically replace text. Paste location does not allow.",
        
        # Language names
        "any_language": "Any Language",
        "vietnamese": "Vietnamese",
        "english": "English",
        "japanese": "Japanese",
        "korean": "Korean", 
        "chinese_simplified": "Chinese (Simplified)",
        "chinese_traditional": "Chinese (Traditional)",
        "french": "French",
        "german": "German",
        "spanish": "Spanish",
        "italian": "Italian",
        "portuguese": "Portuguese",
        "russian": "Russian",
        "arabic": "Arabic",
        "thai": "Thai",
        "indonesian": "Indonesian",
    }
}

class LanguageManager:
    def __init__(self):
        self.current_language = "vi"  # M·∫∑c ƒë·ªãnh ti·∫øng Vi·ªát
        self.load_language_preference()
        
    def load_language_preference(self):
        """Load ng√¥n ng·ªØ ƒë√£ ch·ªçn t·ª´ file"""
        if os.path.exists(LANGUAGE_CONFIG_FILE):
            try:
                with open(LANGUAGE_CONFIG_FILE, "r", encoding="utf-8") as f:
                    data = json.load(f)
                    self.current_language = data.get("language", "vi")
            except Exception:
                self.current_language = "vi"
    
    def save_language_preference(self, language):
        """L∆∞u ng√¥n ng·ªØ ƒë√£ ch·ªçn v√†o file"""
        try:
            with open(LANGUAGE_CONFIG_FILE, "w", encoding="utf-8") as f:
                json.dump({"language": language}, f, ensure_ascii=False, indent=2)
            self.current_language = language
        except Exception as e:
            print(f"Error saving language preference: {e}")
    
    def get_text(self, key, language=None):
        """L·∫•y text ƒë√£ d·ªãch theo ng√¥n ng·ªØ hi·ªán t·∫°i"""
        if language is None:
            language = self.current_language
        
        if language not in TRANSLATIONS:
            language = "vi"  # Fallback to Vietnamese
            
        return TRANSLATIONS[language].get(key, key)
    
    def get_current_language(self):
        """L·∫•y ng√¥n ng·ªØ hi·ªán t·∫°i"""
        return self.current_language
    
    def set_language(self, language):
        """ƒê·∫∑t ng√¥n ng·ªØ m·ªõi"""
        if language in TRANSLATIONS:
            self.save_language_preference(language)
            return True
        return False
    
    def get_available_languages(self):
        """L·∫•y danh s√°ch ng√¥n ng·ªØ c√≥ s·∫µn"""
        return list(TRANSLATIONS.keys())

# Global language manager instance
language_manager = LanguageManager()

def _(key, language=None):
    """H√†m shortcut ƒë·ªÉ l·∫•y text ƒë√£ d·ªãch"""
    return language_manager.get_text(key, language)

def get_language_manager():
    """L·∫•y instance c·ªßa language manager"""
    return language_manager
