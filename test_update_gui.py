#!/usr/bin/env python3
"""
Test script Ä‘á»ƒ kiá»ƒm tra GUI update dialog
"""

import tkinter as tk
import sys
import os

# ThÃªm thÆ° má»¥c hiá»‡n táº¡i vÃ o path
sys.path.insert(0, os.path.dirname(__file__))

from core.updater import Updater, UpdateDialog

def test_update_dialog():
    """Test update dialog vá»›i dá»¯ liá»‡u giáº£"""
    root = tk.Tk()
    root.title("Test Update Dialog")
    root.geometry("300x200")
    
    # Táº¡o mock updater
    updater = Updater()
    updater.current_version = "1.0.0"
    updater.new_version = "1.0.3"
    updater.download_url = "https://github.com/quockhanh112hubt/ITM_Translate/releases/download/v1.0.3/ITM_Translate.exe"
    
    def show_update_available():
        changelog = """## Cáº­p nháº­t má»›i v1.0.3

- âœ… Auto-update tá»« GitHub releases
- ðŸ”„ Cháº¡y trong system tray  
- ðŸŽ¯ Popup hiá»ƒn thá»‹ káº¿t quáº£ dá»‹ch
- ðŸ”§ Sá»­a lá»—i vÃ  cáº£i thiá»‡n hiá»‡u suáº¥t

## CÃ i Ä‘áº·t:
1. Download file ITM_Translate.exe
2. Cháº¡y vÃ  cáº¥u hÃ¬nh API key trong tab "NÃ¢ng Cao"
3. Táº­n hÆ°á»Ÿng!"""
        
        UpdateDialog(root, updater, has_update=True, new_version="1.0.3", changelog=changelog)
    
    def show_no_update():
        UpdateDialog(root, updater, has_update=False, new_version="1.0.0", 
                    changelog="Báº¡n Ä‘ang sá»­ dá»¥ng phiÃªn báº£n má»›i nháº¥t")
    
    def test_real_check():
        """Test kiá»ƒm tra update tháº­t tá»« GitHub"""
        real_updater = Updater()
        real_updater.current_version = real_updater.get_current_version()
        
        def check_worker():
            try:
                has_update, version, message = real_updater.check_for_updates()
                print(f"Káº¿t quáº£ kiá»ƒm tra: has_update={has_update}, version={version}")
                print(f"Message: {message}")
                
                root.after(0, lambda: UpdateDialog(root, real_updater, has_update, version, message))
            except Exception as e:
                print(f"Lá»—i kiá»ƒm tra: {e}")
        
        import threading
        threading.Thread(target=check_worker, daemon=True).start()
    
    # Táº¡o buttons Ä‘á»ƒ test
    tk.Button(root, text="Test: CÃ³ Update", command=show_update_available, 
              bg='green', fg='white', font=('Arial', 12)).pack(pady=10)
    
    tk.Button(root, text="Test: KhÃ´ng cÃ³ Update", command=show_no_update,
              bg='blue', fg='white', font=('Arial', 12)).pack(pady=10)
    
    tk.Button(root, text="Test: Kiá»ƒm tra tháº­t tá»« GitHub", command=test_real_check,
              bg='orange', fg='white', font=('Arial', 12)).pack(pady=10)
    
    tk.Button(root, text="ThoÃ¡t", command=root.quit,
              bg='red', fg='white', font=('Arial', 12)).pack(pady=10)
    
    print("ðŸ”§ Test Update GUI - Sáºµn sÃ ng!")
    print("- Báº¥m cÃ¡c nÃºt Ä‘á»ƒ test dialog update")
    print("- Kiá»ƒm tra luá»“ng download vÃ  install")
    print("- Xem message vÃ  UI hoáº¡t Ä‘á»™ng nhÆ° tháº¿ nÃ o")
    
    root.mainloop()

if __name__ == "__main__":
    test_update_dialog()
